?which
?"%in%"
which(n %in% N)
# ---------------2 ------------------
set.seed(1)
p <- c(0.5, 0.5, 0.01, 0,01)
die.sides <- 6
N <-c(5,20,30,100)
rep <- 10000
z2 <- sapply(N, function(n){
replicate(rep, {
x <- sample(1:die.sides, n, replace= TRUE)
(mean(x==6)- p[which(n %in% N)] /   sqrt(p[wich(n %in%N)] * (1-p[which(n %in% N)]) /n ))
})
})
# ---------------2 ------------------
set.seed(1)
p <- c(0.5, 0.5, 0.01, 0,01)
die.sides <- 6
N <-c(5,30,30,100)
rep <- 10000
z2 <- sapply(N, function(n){
replicate(rep, {
x <- sample(1:die.sides, n, replace= TRUE)
(mean(x==6)- p[which(n %in% N)] )/   sqrt(p[wich(n %in%N)] * (1-p[which(n %in% N)]) /n )
})
})
z2 <- sapply(N, function(n){
replicate(rep, {
x <- sample(1:die.sides, n, replace= TRUE)
(mean(x==6)- p[which(n %in% N)] )/   sqrt(p[which(n %in%N)] * (1-p[which(n %in% N)]) /n )
})
})
?signif
# ---------------2 ------------------
set.seed(1)
p <- c(0.5, 0.5, 0.01, 0,01)
die.sides <- 6
N <-c(5,30,30,100)
rep <- 10000
z2 <- sapply(N, function(n){
replicate(rep, {
x <- sample(1:die.sides, n, replace= TRUE)
(mean(x==6)- p[which(n %in% N)] )/   sqrt(p[which(n %in%N)] * (1-p[which(n %in% N)]) /n )
})
})
mypar(2,2)
library(rafalib)
mypar(2,2)
# seq(along=Ns) generates the sequence 1, 2, ..., length(along)
for (i in seq(along=Ns)) {
titleavg <- signif(mean(zs[,i]),3)
titlesd <- signif(popsd(zs[,i]),3)
title <- paste0("p = ", p[i], " and n = ", Ns[i])
qqnorm(zs[,i],main=title)
qqline(zs[,i],col=2)
}
library(rafalib)
mypar(2,2)
# seq(along=Ns) generates the sequence 1, 2, ..., length(along)
for (i in seq(along=N)) {
titleavg <- signif(mean(z2[,i]),3)
titlesd <- signif(popsd(z2[,i]),3)
title <- paste0("p = ", p[i], " and n = ", N[i])
qqnorm(z2[,i],main=title)
qqline(z2[,i],col=2)
}
library(rafalib)
mypar(2,2)
# seq(along=Ns) generates the sequence 1, 2, ..., length(along)
for (i in seq(along=N)) {
titleavg <- signif(mean(z2[,i]),3)
titlesd <- signif(popsd(z2[,i]),3)
title <- paste0("p = ", p[i], " and n = ", N[i])
qqnorm(z2[,i],main=title)
qqline(z2[,i],col=2)
}
# ---------------2 ------------------
set.seed(1)
p <- c(0.5, 0.5, 0.01, 0,01)
die.sides <- 6
N <-c(5,30,30,100)
rep <- 10000
z2 <- sapply(N, function(n){
replicate(rep, {
x <- sample(1:die.sides, n, replace= TRUE)
(mean(x==6)- p[which(n %in% N)] )/   sqrt(p[which(n %in%N)] * (1-p[which(n %in% N)]) /n )
})
})
library(rafalib)
mypar(2,2)
# seq(along=Ns) generates the sequence 1, 2, ..., length(along)
for (i in seq(along=N)) {
titleavg <- signif(mean(z2[,i]),3)
titlesd <- signif(popsd(z2[,i]),3)
title <- paste0("p = ", p[i], " and n = ", N[i])
qqnorm(z2[,i],main=title)
qqline(z2[,i],col=2)
}
library(downloader)
library(dplyr)
library(downloader)
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/femaleControlsPopulation.csv"
filename <- basename(url)
download(url, destfile=filename)
x <- unlist( read.csv(filename) )
set.seed(1)
set.seed(1)
n <- 1000
averages5 <- vector("numeric", n)
for(i in 1:n){
averages5[i]  <- sample(x,5) %>% mean
}
view(x)
View(x)
for(i in 1:n){
averages5[i]  <- sample(x,5) %>% mean
}
View(averages5)
par(mfrow=c(1,2))
hist(averages5)
hist(averages50)
par(mfrow=c(1,2))
hist(averages5)
hist(averages50)
n <- 1000
averages50 <- vector("numeric", n)
for(i in 1:n){
averages50[i]  <- sample(x,50) %>% mean
}
par(mfrow=c(1,2))
hist(averages5)
hist(averages50)
p <- pnorm(25,mean(averages50),sd(averages50)- pnorm(23,mean(averages50),sd(averages50)))
p2 <- pnorm(25,23.9,0.43)- pnorm(23,23.9,0.43)
p
library(dplyr)
dat <- read.csv("femaleMiceWeights.csv")
control <- filter(dat, Diet=="chow") %>% select(Bodyweight) %>% unlist
treatment <- filter(dat, Diet== "hf") %>% select(Bodyweight) %>% unlist
N <- length(treatment)
N
obs <- mean(treatment) - mean(control)
bos
obs
se <- sqrt(var(treatment)/N + var(control)/N)
tstat <- obs/se
tstat
2*(1 - pnorm(tstat))
population <- read.csv("femaleControlsPopulation.csv")
population <- unlist(population)
n <- 10000
nulls <- vector("numeric",n)
for (i in 1:n){
control <- sample(population,N)
treatment <- sample(population,N)
se <- sqrt(var(treatment)/N+ var(control)/N)
nulls[i] <- (mean(treatment) - mean(control)) / se
}
nulls[i] <- (mean(treatment) - mean(control)) / se
2*(1 - pnorm(tstat))
population <- read.csv("femaleControlsPopulation.csv")
population <- unlist(population)
n <- 10000
nulls <- vector("numeric",n)
for (i in 1:n){
control <- sample(population,N)
treatment <- sample(population,N)
se <- sqrt(var(treatment)/N+ var(control)/N)
nulls[i] <- (mean(treatment) - mean(control)) / se
}
mypar()
qqnorm(nulls)
qqline(nulls)
?t.test
ttest <- t.test(mean(treatment), mean(control))
ttest <- t.test(mean(treatm), mean(control))
ttest <- t.test(mean(treatmemt), mean(control))
ttest <- t.test(mean(treatment), mean(control))
ttest <- t.test(treatment, control)
ttest
library(dplyr)
dat <- read.csv("femaleMiceWeights.csv")
control <- filter(dat, Diet=="chow") %>% select(Bodyweight) %>% unlist
treatment <- filter(dat, Diet== "hf") %>% select(Bodyweight) %>% unlist
ttest <- t.test(treatment, control)
ttest
#--- exercises #1 --------------
set.seed(1)
n <- 100 # total number of dice we're rolling
x==6
#--- exercises #1 --------------
set.seed(1)
n <- 100 # total number of dice we're rolling
x <- sample(1:6, n, replace=TRUE)
mean(x==6)
x==6
p1 <- 1/6 # mean of die value distribution
sdp <- (p1*(1-p1)/n)
sdp
p1 <- 1/6 # mean of die value distribution
sdp <- (p1*(1-p1)/n)
z <- replicate(10000,{
x <- sample(1:6, n, replace=TRUE)
(mean(x==6)-p1)/sqrt(p1*(1-p1)/n)
}
)
sdp <- (p1*(1-p1)/n)
p1 <- 1/6 # mean of die value distribution
sdp <- (p1*(1-p1)/n)
z <- replicate(10000,{
x <- sample(1:6, n, replace=TRUE)
(mean(x==6)-p1)/sqrt(p1*(1-p1)/n)
}
)
qqnorm(z)
abline(0,1)
mean(abs(z)>2)
abs(z)>2
mean(x==6)-p1
qqnorm(z)
mean(abs(z)>2)
hist(z)
abline(b=2)
hist(z)
abline(b=2)
abline(b=2 col=2)
abline(v=2 col=2)
abline(v=2 ,col=2)
abline(v=c(2,2) ,col=2)
hist(z)
abline(v=c(2,2) ,col=2)
abline(v=c(2,-2) ,col=2)
mean(abs(z)>2)
n <- 100 # total number of dice we're rolling
x <- sample(1:6, n, replace=TRUE)
mean(x==6)
x <- sample(1:6, n, replace=TRUE)
mean(x==6)
x <- sample(1:6, n, replace=TRUE)
mean(x==6)
x <- sample(1:6, n, replace=TRUE)
mean(x==6)
x <- sample(1:6, n, replace=TRUE)
mean(x==6)
x <- sample(1:6, n, replace=TRUE)
mean(x==6)
p1
plot(dnorm(z,p1, sdp))
plot(density(norm(z,p1, sdp)))
norm <- dnorm(z, p1, sdp)
plot(z,norm)
hist()
hist(z)
# ---------------2 ------------------
set.seed(1)
p <- c(0.5, 0.5, 0.01, 0,01)
die.sides <- 6
N <-c(5,30,30,100)
rep <- 10000
z2 <- sapply(N, function(n){
replicate(rep, {
x <- sample(1:die.sides, n, replace= TRUE)
(mean(x==6)- p[which(n %in% N)] )/   sqrt(p[which(n %in%N)] * (1-p[which(n %in% N)]) /n )
})
})
library(rafalib)
mypar(2,2)
# seq(along=Ns) generates the sequence 1, 2, ..., length(along)
for (i in seq(along=N)) {
titleavg <- signif(mean(z2[,i]),3)
titlesd <- signif(popsd(z2[,i]),3)
title <- paste0("p = ", p[i], " and n = ", N[i])
qqnorm(z2[,i],main=title)
qqline(z2[,i],col=2)
}
1/6
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/femaleControlsPopulation.csv"
filename <- basename(url)
download(url, destfile=filename)
x <- unlist( read.csv(filename) )
set.seed(1)
n <- 1000
averages5 <- vector("numeric", n)
for(i in 1:n){
averages5[i]  <- sample(x,5) %>% mean
}
View(x)
for(i in 1:n){
averages5[i]  <- sample(x,5) %>% mean
}
set.seed(1)
n <- 1000
averages50 <- vector("numeric", n)
for(i in 1:n){
averages50[i]  <- sample(x,50) %>% mean
}
par(mfrow=c(1,2))
hist(averages5)
hist(averages50)
set.seed(1)
n <- 1000
averages5 <- vector("numeric", n)
for(i in 1:n){
averages5[i]  <- sample(x,5) %>% mean
}
set.seed(1)
n <- 1000
averages50 <- vector("numeric", n)
for(i in 1:n){
averages50[i]  <- sample(x,50) %>% mean
}
par(mfrow=c(1,2))
hist(averages5)
hist(averages50)
p <- pnorm(25,mean(averages50),sd(averages50)- pnorm(23,mean(averages50),sd(averages50)))
p
library(dplyr)
dat <- read.csv("femaleMiceWeights.csv")
control <- filter(dat, Diet=="chow") %>% select(Bodyweight) %>% unlist
treatment <- filter(dat, Diet== "hf") %>% select(Bodyweight) %>% unlist
ttest <- t.test(treatment, control)
ttest
N <- length(treatment)
N
obs <- mean(treatment) - mean(control)
obs
tstat
2*(1 - pnorm(tstat))
population <- read.csv("femaleControlsPopulation.csv")
population <- unlist(population)
n <- 10000
nulls <- vector("numeric",n)
for (i in 1:n){
control <- sample(population,N)
treatment <- sample(population,N)
se <- sqrt(var(treatment)/N+ var(control)/N)
nulls[i] <- (mean(treatment) - mean(control)) / se
}
mypar()
mypar()
qqnorm(nulls)
qqline(nulls)
n <- 10000
nulls <- vector("numeric",n)
for (i in 1:n){
control <- sample(population,3)
treatment <- sample(population,3)
se <- sqrt(var(treatment)/3+ var(control)/3)
nulls[i] <- (mean(treatment) - mean(control)) / se
}
mypar()
qqnorm(nulls)
qqline(nulls)
ttest <- t.test(treatment, control)
library(dplyr)
dat <- read.csv("femaleMiceWeights.csv")
control <- filter(dat, Diet=="chow") %>% select(Bodyweight) %>% unlist
treatment <- filter(dat, Diet== "hf") %>% select(Bodyweight) %>% unlist
ttest <- t.test(treatment, control)
ttest
rm(list=ls())
library(downloader)
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/femaleMiceWeights.csv"
filename <- "femaleMiceWeights.csv"
if(!file.exists("femaleMiceWeights.csv")) download(url,destfile=filename)
dat <- read.csv(filename)
#--- exercises #1 --------------
set.seed(1)
n <- 100 # total number of dice we're rolling
x <- sample(1:6, n, replace=TRUE)
x
=
mean(x==6)
x <- sample(1:6, n, replace=TRUE)
mean(x==6)
mple(1:6, n, replace=TRUE)
mean(x==6)
mple(1:6, n, replace=TRUE)
mean(x==6)
?sample
n <- 100 # total number of dice we're rolling
x <- sample(1:6, n, replace=TRUE)
mean(x==6)
x <- sample(1:6, n, replace=TRUE)
mean(x==6)
x <- sample(1:6, n, replace=TRUE)
mean(x==6)
sdp <- (p1*(1-p1)/n)
z
mean(x==6)
p1 <- 1/6 # mean of die value distribution
sdp <- (p1*(1-p1)/n)
z <- replicate(10000,{
x <- sample(1:6, n, replace=TRUE)
(mean(x==6)-p1)/sqrt(p1*(1-p1)/n)
}
)
qqnorm(z)
abline(0,1)
hist(z)
abline(v=c(2,-2) ,col=2)
mean(abs(z)>2)
1/6
# ---------------2 ------------------
set.seed(1)
?sapply
which(n %in% N)
# ---------------2 ------------------
set.seed(1)
p <- c(0.5, 0.5, 0.01, 0,01)
N <-c(5,30,30,100)
die.sides <- 6
rep <- 10000
z2 <- sapply(N, function(n){
replicate(10000, {
x <- sample(1:die.sides, n, replace= TRUE)
(mean(x==6)- p[which(n %in% N)] )/   sqrt(p[which(n %in%N)] * (1-p[which(n %in% N)]) /n )
})
})
which(n %in% N)
n %in% N
library(rafalib)
mypar(2,2)
# seq(along=Ns) generates the sequence 1, 2, ..., length(along)
for (i in seq(along=N)) {
titleavg <- signif(mean(z2[,i]),3)
titlesd <- signif(popsd(z2[,i]),3)
title <- paste0("p = ", p[i], " and n = ", N[i])
qqnorm(z2[,i],main=title)
qqline(z2[,i],col=2)
}
set.seed(1)
ps <- c(0.5,0.5,0.01,0.01)
ns <- c(5,30,30,100)
library(rafalib)
mypar(4,2)
for(i in 1:4){
p <- ps[i]
sides <- 1/p
n <- ns[i]
zs <- replicate(10000,{
x <- sample(1:sides,n,replace=TRUE)
(mean(x==1) - p) / sqrt(p*(1-p)/n)
})
hist(zs,nclass=7)
qqnorm(zs)
abline(0,1)
}
set.seed(1)
ps <- c(0.5,0.5,0.01,0.01)
ns <- c(5,30,30,100)
library(rafalib)
mypar(4,2)
for(i in 1:4){
p <- ps[i]
sides <- 1/p
n <- ns[i]
zs <- replicate(10000,{
x <- sample(1:sides,n,replace=TRUE)
(mean(x==6) - p) / sqrt(p*(1-p)/n)
})
hist(zs,nclass=7)
qqnorm(zs)
abline(0,1)
}
mean(x==6)
1/0.01
library(downloader)
library(dplyr)
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/femaleControlsPopulation.csv"
filename <- basename(url)
download(url, destfile=filename)
x <- unlist( read.csv(filename) )
set.seed(1)
n <- 1000
averages5 <- vector("numeric", n)
for(i in 1:n){
averages5[i]  <- sample(x,5) %>% mean
}
set.seed(1)
n <- 1000
averages50 <- vector("numeric", n)
for(i in 1:n){
averages50[i]  <- sample(x,50) %>% mean
}
par(mfrow=c(1,2))
hist(averages5)
hist(averages50)
p <- pnorm(25,mean(averages50),sd(averages50)- pnorm(23,mean(averages50),sd(averages50)))
p2 <- pnorm(25,23.9,0.43)- pnorm(23,23.9,0.43)
library(dplyr)
n <- 1000
averages5 <- vector("numeric", n)
for(i in 1:n){
averages5[i]  <- sample(x,5) %>% mean
}
set.seed(1)
n <- 1000
averages50 <- vector("numeric", n)
for(i in 1:n){
averages50[i]  <- sample(x,50) %>% mean
}
par(mfrow=c(1,2))
hist(averages5)
hist(averages50)
p <- pnorm(25,mean(averages50),sd(averages50)- pnorm(23,mean(averages50),sd(averages50)))
p2 <- pnorm(25,23.9,0.43)- pnorm(23,23.9,0.43)
library(dplyr)
dat <- read.csv("femaleMiceWeights.csv")
control <- filter(dat, Diet=="chow") %>% select(Bodyweight) %>% unlist
treatment <- filter(dat, Diet== "hf") %>% select(Bodyweight) %>% unlist
